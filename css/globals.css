:root {
    --mainColor: #02faee;
    --mainColorLight: rgba(79, 169, 185, 0.514);
    --clr-white-light: #ced4da;
    --clr-dark: #333333;
    --clr-dark-light: #222222da;
    --clr-darkest: #1c1f23;
    --mainShadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    --secShadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.3);
}

* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

html {
    scroll-behavior: smooth;
}

body {
    font-family: "Nunito", sans-serif;
}

p {
    font-weight: 300;
}

h1 {
    font-weight: 800;
    font-size: 60px;
    letter-spacing: 15px;
}

h2 {
    text-transform: capitalize;
    width: fit-content;
    margin-inline: auto;
    font-size: 2.5rem;
    margin-bottom: 5rem;
    position: relative;
}

h2::before,
h2::after {
    --sick: 2px;
    --finall-height: 14px;
    content: "";
    position: absolute;
    top: calc(100% + 15px);
    left: 50%;
}

h2::before {
    width: 60%;
    height: var(--finall-height);
    transform: translateX(-50%);
    border: var(--sick) solid;
    border-inline: 0;
}
h2::after {
    width: 110%;
    height: var(--sick);
    background-color: var(--clr-dark-light);
    margin-top: calc(var(--finall-height) / 2);
    transform: translate(-50%, 50%);
}

h3 {
    font-size: 1.75rem;
    font-weight: 700;
}

h5 {
    font-size: 1.5rem;
    margin-block: 1rem 0.5rem;
}

a {
    color: currentColor;
    text-decoration: none;
    transition: 0.15 s;
}

.figures-container {
    padding-block: 5px;
    /* for the translation on hover && while the parent has the overflow hidden */
}

figure {
    border: 1px solid var(--clr-white-light);
    border-radius: 4px;
    box-shadow: var(--mainShadow);
    background-color: #fff;
    transition: 0.2s;
}

figure:hover {
    transform: translateY(-3px);
    box-shadow: var(--secShadow);
}

figure img {
    width: 100%;
    height: 250px;
    padding: 1rem;
    border-radius: inherit;
}

figure figcaption {
    padding: 1rem;
}

button,
.btn {
    display: inline-block;
    cursor: pointer;
    padding: 6px 12px;
    line-height: 1.6;
    text-transform: capitalize;
    color: #fff;
    background-color: var(--clr-dark);
    border: 1px solid var(--clr-dark);
    border-radius: 4px;
    transition: 0.2s;
}
button:hover,
.btn:hover {
    background-color: var(--clr-darkest);
    border-color: var(--clr-darkest);
}

a:hover {
    opacity: 0.8;
}

ul {
    list-style: none;
}

section {
    padding-block: 3rem;
}

section:nth-of-type(2n) {
    background-image: linear-gradient(
        360deg,
        rgb(233, 233, 233),
        rgba(39, 167, 190, 0.651)
    );
}

label {
    text-transform: capitalize;
}

input,
select,
textarea {
    width: 100%;
    padding: 6px 12px;
    border-radius: 4px;
    margin-bottom: 1rem;
    text-transform: capitalize;
    font-weight: 400;
    border: 1px solid var(--clr-white-light);
    line-height: 1.6;
    color: var(--clr-dark-light);
}

select {
    background-color: #fff;
    padding: 8px;
}

/* Float && Clear classes */
.clear {
    clear: both;
}

.divided-two,
.divided-three,
.divided-four {
    overflow: auto;
}

.divided-two > *:not(.clear) {
    float: right;
    width: calc((100% - var(--gap-x, 5%)) / 2);
}

.divided-two > *:nth-child(1) {
    float: left;
}

.divided-three > *:not(.clear),
.divided-four > *:not(.clear) {
    float: left;
    padding-block-end: var(--gap-y, 1rem);
    padding-inline-start: var(--gap-x, 1rem);
}

.divided-three > *:nth-child(3n + 1),
.divided-four > *:nth-child(4n + 1) {
    padding-inline-start: 0;
}

.divided-three > * {
    width: calc(100% / 3);
}

.divided-four > * {
    width: calc(100% / 4);
}

/* 
 * First mobile design 
 */
.container {
    width: 100%;
    padding-inline: 0.75rem;
    margin-inline: auto;
}

@media (min-width: 576px) {
    .container {
        max-width: 540px;
    }
}

@media (min-width: 768px) {
    .container {
        max-width: 720px;
    }
}

@media (min-width: 992px) {
    .container {
        max-width: 960px;
    }
}

@media (min-width: 1200px) {
    .container {
        max-width: 1140px;
    }
}
